Notes on Azure
Virtual Machine types:
Reference: https://azure.microsoft.com/en-in/pricing/details/virtual-machines/series/
Create a vm depending on your workload requirement and choose configure access to the vm by using ASG and NSG.

AZURE VNET:
ASG: This is used to group diff application or vm to a consolidated set of security group.
It enhances NSG, you'll have to use ASG in collaboration with NSG. ASG will select all vm and you can use NSG to set traffic flow from ASG security group.


**Azure Virtual Network (VNet):**
A VNet is an isolated network within the Azure cloud that allows various Azure resources, such as VMs (Virtual Machines), to securely communicate with each other,
the internet, and on-premises networks. It's the fundamental building block for your private network in Azure.

**Network Security Groups (NSG):**
NSGs are used to filter network traffic to and from Azure resources in an Azure VNet. An NSG can contain multiple inbound and outbound security rules that allow
or deny traffic based on several parameters, such as protocol, port, and source or destination IP address. NSGs can be associated with subnets
in the VNet or directly to individual resources.

**Application Security Groups (ASG):**
ASGs are a feature that enhances the capabilities of NSGs, allowing you to define fine-grained network security policies based on workloads or applications.
 Instead of defining rules based on IP addresses, you can group virtual machines and define network security policies based on these groups.
 This abstraction simplifies the management and maintenance of network security rules, as you don't need to update rules when adding or removing VMs in your application group.

**How ASGs Enhance NSGs:**
ASGs are used in conjunction with NSGs to refine how security rules are applied. When you associate a VM to an ASG,
you can then use that ASG as a source or destination in NSG security rules. This setup allows for more granular control over
traffic flow between different groups of VMs or applications within your Azure VNet. For instance, you can easily allow communication
between your front-end and back-end layers without having to specify individual IP addresses.

By utilizing ASGs with NSGs, you can:
- Dynamically manage security policies as you scale your environment up or down.
- Apply and maintain security rules more efficiently by grouping VMs according to their roles, applications, or workloads.
- Improve the clarity of your security rules, making it easier to understand and audit the traffic flow within your VNet.

In summary, ASGs help organize your virtual machines into logical groups that can be referenced in NSG rules, simplifying the management
and application of network security policies in a dynamic cloud environment.



Important:
  A firewall and a Web Application Firewall (WAF) serve different purposes, and in the context of Azure, they are distinct offerings designed
  for different security needs.

### Azure Firewall

Azure Firewall is a managed, cloud-based network security service that protects your Azure Virtual Network resources. It's a stateful firewall
as a service with built-in high availability and

unrestricted cloud scalability. Azure Firewall provides outbound, inbound, and network-level traffic filtering and monitoring.
 It can filter traffic between resources in a VNet, from the internet to the VNet, and even between different VNets. Key features include:
- **FQDN filtering in network rules**
- **Network traffic filtering rules**
- **SNAT support for outbound internet connectivity**
- **Integrated threat intelligence based on Microsoft Threat Intelligence**
- **High availability built-in**
- **Unrestricted cloud scalability**

### Azure Web Application Firewall (WAF)

Azure Web Application Firewall (WAF) is a specialized form of firewall focused on securing web applications. It is offered as part of Azure Application Gateway,
 Azure Front Door Service, and Azure Content Delivery Network (CDN) services. WAF is designed to protect web applications from common exploits and vulnerabilities,
 such as SQL injection, cross-site scripting (XSS), and other web-based attacks. WAF operates at Layer 7 (HTTP/HTTPS)
 and uses rules from the OWASP (Open Web Application Security Project) core rule sets to identify and block malicious traffic. Key features include:
- **Protection against web vulnerabilities and attacks**
- **Custom rules and managed rule sets**
- **Monitoring and logging capabilities**
- **Integration with Azure Application Gateway, Front Door, and CDN**

### Key Differences

- **Scope of Protection**: Azure Firewall provides broad network-level protection and monitoring for resources within
Azure Virtual Networks, including filtering outbound, inbound, and internal network traffic. On the other hand, Azure WAF
 is specifically designed to protect web applications from common web vulnerabilities and attacks.
- **Layer of Operation**: Azure Firewall operates at the network layer (Layers 3 and 4), while Azure WAF operates at the
application layer (Layer 7) to inspect HTTP/HTTPS traffic.
- **Use Cases**: Use Azure Firewall when you need general network security and traffic filtering for all types of resources in your VNet.
 Choose Azure WAF when you specifically need to protect web applications from attacks and vulnerabilities.

In summary, while both services provide security features, they cater to different aspects of network and application security within Azure.
It's not uncommon for organizations to use both Azure Firewall and Azure WAF together to achieve comprehensive security coverage for their cloud resources and applications.

Configure DNAT rule on azure:
to allow traffic from source * or my ip,  destination ip address <firewall public ip> protocol <tcp> destination port <4000>  translated type <ip address> translated address <private ip of the vm>

AZURE STORAGE:


 Automate Azure Resources using Azure CLI:
   Install or upgrade azure cli.
   check current version run; az version
Reference:
  https://learn.microsoft.com/en-us/cli/azure/install-azure-cli-macos#update
  Using the CLI to create resources is prone to error, we can introduce a bit of automation by using the CLI to create diff resources.

Common Azure CLI commands for managing Azure resources:
Reference:
  https://learn.microsoft.com/en-us/azure/virtual-machines/linux/cli-manage
  This ensures automation, reduction of error and efficiency.

  ERROR WHY LOGIN IN TO AZURE:

➜  Azure-series git:(main) ✗ ./create_vm.sh
AADSTS50076: Due to a configuration change made by your administrator, or because you moved to a new location, you must use multi-factor authentication to access '797f4846-ba00-4fd7-ba43-dac1f8f63013'. Trace ID: 3a8be455-0c91-4eb0-95fb-f1d78e1e2f00 Correlation ID: cfc550eb-e6b2-4928-8a22-6dd7135e377e Timestamp: 2024-03-21 16:32:19Z
Interactive authentication is needed. Please run:
az login --scope https://management.core.windows.net//.default

resolved by running:
az login --tenant <tenant-id>
This is b/c mfa is needed, a code will be sent to the email act associated with your azure act.
or run

Interactive authentication is needed. Please run:
az login --scope https://management.core.windows.net//.default
This will resolve the issue..


Manage azure subscription:
To switch between Azure subscriptions using the Azure CLI, you can use the `az account set` command followed by the subscription
ID or name of the subscription you want to switch to. Here's the general syntax:

```
az account set --subscription SUBSCRIPTION_ID_OR_NAME
```

Replace `SUBSCRIPTION_ID_OR_NAME` with either the subscription ID or the name of the subscription you want to switch to.
You can find the subscription ID and names of your subscriptions by running the following command:

```
az account list --output table
```

This command will list all the subscriptions associated with your account along with their IDs and names.
Once you have the subscription ID or name, you can use the `az account set` command to switch to that subscription. Here's an example:

```
az account set --subscription "My Subscription"
```

Replace `"My Subscription"` with the name of the subscription you want to switch to.

After running the `az account set` command, your default subscription will be updated, and subsequent Azure CLI commands will be executed in the context of the newly selected subscription.
---
az account show --output table
This command will display information about the currently selected subscription, including its ID,
name, and other details, in a tabular format. The subscription marked as (current) is the one currently in use.

Create resource Group:
az group create --name myResourceGroup --location eastus
Reference:
  https://learn.microsoft.com/en-us/cli/azure/manage-azure-groups-azure-cli

  To ssh into the machine created from your script.
  click connect on the console and copy the command ex:
  click on Native SSH
  ssh -i ~/.ssh/id_rsa.pem wiz_obi@52.255.174.251
  The user and the ip will be there

ARM template:
az group create --name arm-vscode --location eastus
az deployment group create --resource-group arm-vscode --template-file azuredeploy.json --parameters azuredeploy.parameters.json

Useful links:
  https://learn.microsoft.com/en-us/azure/azure-resource-manager/templates/template-tutorial-add-parameters?tabs=azure-cli
  https://learn.microsoft.com/en-us/azure/azure-resource-manager/templates/quickstart-create-templates-use-visual-studio-code?tabs=CLI
  https://learn.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts?pivots=deployment-language-arm-template

  We have the.
  1. parameters --> repititive names, that can be used accross env
  2. funtions -->
  3. resources  --> service or resource to create
  4. variables --> container to store dynamic values
  5. outputs --> Things you want to get out of the created resource, say public ip of an vm